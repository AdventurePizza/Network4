{"version":3,"sources":["firebaseContext.tsx","assets/green-loader.gif","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","getRequest","Promise","resolve","isSuccessful","setRequest","getRequests","setAnswer","fetchBase","FirebaseProvider","children","useCallback","timeStamp","a","fetch","method","fetchRes","ok","json","request","headers","body","JSON","stringify","message","statusText","answer","requestTimestamp","Provider","value","useStyles","makeStyles","theme","createStyles","root","display","size","width","spacing","height","preview","containedSuccess","backgroundColor","palette","success","main","color","dark","disabled","Tezos","TezosToolkit","wallet","BeaconWallet","name","preferblackNetwork","setWalletProvider","socketURL","window","location","hostname","socket","io","transports","dAppClient","DAppClient","versionNames","uuidv4","App","classes","useState","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","useContext","useSnackbar","enqueueSnackbar","requests","setRequests","answers","setAnswers","version","view","setView","requestInput","setRequestInput","prizeInput","setPrizeInput","selectedRequest","setSelectedRequest","songInput","setSongInput","song","setSong","messageInput","setMessageInput","transactionWait","setTransactionWait","totalBounty","setTotalBounty","collectedBounty","setCollectedBounty","getActiveAccount","clearActiveAccount","then","sync","address","console","log","requestPermissions","permissions","useEffect","tempTotalBounty","i","length","bounty","tempCollectedBounty","owner","result","timestamp","getProfiles","onRequestChange","data","concat","sort","b","parseFloat","on","off","slice","getAcc","className","style","fontSize","alignItems","margin","Select","label","onChange","e","target","href","MenuItem","position","Button","title","onClick","unsync","marginTop","marginLeft","marginRight","overflowX","textAlign","border","map","marginInline","overflowY","index","src","type","id","frameBorder","allowfullscreen","allow","justifyContent","marginBottom","loadingGif","variant","requestOperation","operationDetails","kind","TezosOperationType","TRANSACTION","destination","amount","prize","toString","response","catch","TextField","placeholder","fullWidth","event","Date","now","emit","split","temp","parseSong","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.c50a36ba.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\n\nexport interface IFirebaseContext {\n  getRequest: (key: string) => Promise<IFetchResponseBase>;\n  setRequest: (request) => Promise<IFetchResponseBase>;\n  getRequests: () => Promise<IFetchResponseBase>;\n  setAnswer: (answer, requestTimestamp) => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  getRequest: () => Promise.resolve({ isSuccessful: false }),\n  setRequest: () => Promise.resolve({ isSuccessful: false }),\n  getRequests: () => Promise.resolve({ isSuccessful: false }),\n  setAnswer: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://network4-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n  const getRequest = useCallback(\n    async (timeStamp: string): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/request/${timeStamp}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    },\n    []\n  );\n\n  const setRequest = useCallback(\n    async (request): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/request`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ request: request }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getRequests =\n    useCallback(async (): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/requests`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const setAnswer = useCallback(\n    async (answer, requestTimestamp): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/answer`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ answer: answer, requestTimestamp: requestTimestamp }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n  return (\n    <FirebaseContext.Provider\n      value={{\n        getRequest,\n        setRequest,\n        getRequests,\n        setAnswer,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/green-loader.2c2db02c.gif\";","// @ts-nocheck\nimport \"./App.css\";\nimport React, { useEffect, useState, useContext } from \"react\";\n\n//ui\nimport { Button, Select, MenuItem, TextField, makeStyles, createStyles } from \"@material-ui/core\";\n\n//logic\nimport io from \"socket.io-client\";\nimport { DAppClient, TezosOperationType } from \"@airgap/beacon-sdk\";\nimport { TezosToolkit, OpKind } from '@taquito/taquito'\nimport {\n  BeaconWallet,\n} from '@taquito/beacon-wallet'\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FirebaseContext } from \"./firebaseContext\";\nimport { useSnackbar } from \"notistack\";\nimport loadingGif from \"./assets/green-loader.gif\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    size: {\n      width: theme.spacing(15),\n      height: theme.spacing(15),\n    },\n    preview: {\n      width: theme.spacing(40),\n      height: theme.spacing(40),\n    },\n    containedSuccess: {\n      backgroundColor: theme.palette.success.main,\n      color: \"#fff\",\n      \"&:hover\": {\n        backgroundColor: theme.palette.success.dark\n      }\n    },\n    disabled: {}\n  }),\n);\n\nconst Tezos = new TezosToolkit('https://mainnet.api.tez.ie')\nconst wallet = new BeaconWallet({\n  name: 'hicetnunc.xyz',\n  preferblackNetwork: 'mainnet',\n})\nTezos.setWalletProvider(wallet)\nconst socketURL =\n  window.location.hostname === \"localhost\"\n    ? \"ws://localhost:8000\"\n    : \"wss://network4-backend.herokuapp.com\";\n\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\nconst versionNames = [\"0\", \"v1.0\", \"v2.0\", \"v3.0\", \"v4.0\", \"v5.0\"];\nconst tempID = uuidv4();\n\nfunction App() {\n  const classes = useStyles();\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n\n  const { getRequest, setRequest, getRequests, setAnswer } =\n    useContext(FirebaseContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [requests, setRequests] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [version] = useState(4);\n  const [view, setView] = useState(\"answers\");\n  const [requestInput, setRequestInput] = useState();\n  const [prizeInput, setPrizeInput] = useState();\n  const [selectedRequest, setSelectedRequest] = useState();\n  const [songInput, setSongInput] = useState();\n  const [song, setSong] = useState();\n  const [messageInput, setMessageInput] = useState();\n  const [transactionWait, setTransactionWait] = useState();\n  const [totalBounty, setTotalBounty] = useState(0);\n  const [collectedBounty, setCollectedBounty] = useState(0);\n\n  useEffect(() => {\n    console.log(\"answers\")\n    console.log(answers)\n    let tempTotalBounty = 0;\n    for (let i = 0; i < answers.length; i++) {\n      if (answers[i].bounty)\n        tempTotalBounty += answers[i].bounty;\n    }\n    setTotalBounty(tempTotalBounty);\n\n    let tempCollectedBounty = 0;\n    for (let i = 0; i < answers.length; i++) {\n      if (activeAccount && answers[i].owner === activeAccount.address && answers[i].bounty)\n        tempCollectedBounty += answers[i].bounty;\n    }\n    setCollectedBounty(tempCollectedBounty);\n\n    console.log(\"tempTotalBounty \" + tempTotalBounty)\n    console.log(\"tempCollectedBounty \" + tempCollectedBounty)\n  }, [selectedRequest, answers]);\n\n  useEffect(() => {\n    async function getProfiles() {\n      let result = await getRequests();\n      setRequests(result);\n      if (result.length > 0) {\n        setSelectedRequest(result[0]);\n        setAnswers(await getRequest(result[0].timestamp));\n      }\n    }\n    getProfiles();\n  }, [getRequests]);\n\n  useEffect(() => {\n    const onRequestChange = (data) => {\n      setRequests(\n        requests\n          .concat(data)\n          .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp))\n      );\n    };\n\n    socket.on(\"request\", onRequestChange);\n\n    return () => {\n      socket.off(\"request\", onRequestChange);\n    };\n  }, [requests]);\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  function parseSong(song) {\n    console.log(song.split(\"/\"));\n    let temp = song.split(\"/\");\n    setSong({ type: temp[3], id: temp[4] });\n  }\n\n  const handleRequestInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRequestInput(event.target.value.slice(0, 250));\n  };\n\n  const handlePrizeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPrizeInput(event.target.value);\n  };\n\n  const handleSongtInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    parseSong(event.target.value);\n    setSongInput(event.target.value);\n  };\n\n  const handleMessageInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMessageInput(event.target.value.slice(0, 250));\n  };\n\n  return (\n    <div>\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          margin: 6,\n        }}\n      >\n        <b>Network </b>\n        &nbsp;\n        <Select\n          value={version}\n          label=\"version\"\n          onChange={(e) => {\n            console.log(e.target.value);\n            let target;\n            if (e.target.value === 1) {\n              target = \"https://network1.cc/\";\n            } else if (e.target.value === 2) {\n              target = \"https://adventurepizza.github.io/Network2/\";\n            }\n            else if (e.target.value === 3) {\n              target = \"https://adventurepizza.github.io/Network3/\";\n            }\n            else if (e.target.value === 5) {\n              target = \"https://adventurepizza.github.io/Network5/\";\n            }\n            window.location.href = target;\n            return null;\n          }}\n        >\n          <MenuItem value={1}> {versionNames[1]}</MenuItem>\n          <MenuItem value={2}> {versionNames[2]}</MenuItem>\n          <MenuItem value={3}> {versionNames[3]}</MenuItem>\n          <MenuItem value={4}> {versionNames[4]}</MenuItem>\n          <MenuItem value={5}> {versionNames[5]}</MenuItem>\n        </Select>\n        &nbsp; 📠\n      </div>\n      <div\n        className=\"top-right\"\n        style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\", backgroundColor: \"white\", margin: 6 }}\n      >\n        {showUnsync && (\n          <Button\n            size={\"small\"}\n            title={\"unsync\"}\n            onClick={() => {\n              unsync();\n            }}\n          >\n            <u>unsync</u>{\" \"}\n          </Button>\n        )}\n\n        {showUnsync && <div> | </div>}\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            await sync();\n          }}\n        >\n          <u>{synced}</u>{\" \"}\n        </Button>\n      </div>\n      <div style={{ fontSize: \"0.9em\", marginTop: 13, marginLeft: 13 }}>\n        <b>Requests</b>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          overflowX: \"scroll\",\n        }}\n      >\n\n        <div style={{ textAlign: \"center\", margin: 2 }}>\n          <Button\n            onClick={async () => {\n              //add req\n              setView(\"+request\");\n            }}\n            style={{ height: \"100%\", border: \"solid 2px \" }}\n          >\n            +\n          </Button>\n        </div>\n\n\n        {requests &&\n          requests.map((request) => (\n            <div\n              key={request.timestamp}\n              style={{ textAlign: \"center\", margin: 2 }}\n            >\n              <Button\n                title={request.timestamp}\n                onClick={async () => {\n                  //open answers\n                  //console.log(await getRequest(request.timestamp))\n                  setAnswers(await getRequest(request.timestamp));\n                  setView(\"answers\");\n                  setSelectedRequest(request);\n                }}\n                style={{ width: 300, marginInline: 4, border: \"solid 2px \" }}\n              >\n                {request.request}\n              </Button>\n            </div>\n          ))}\n      </div>\n\n      {view === \"answers\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginLeft: 13, overflowY: \"auto\" }}>\n            <b>Answers</b>\n          </div>\n          <div\n            style={{\n              display: \"grid\",\n              width: \"100%\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              overflowX: \"scroll\",\n            }}\n          >\n            {selectedRequest &&\n              <>\n                <div style={{ textAlign: \"center\", margin: 6 }}>\n                  <Button\n                    onClick={async () => {\n                      //add answer\n                      setView(\"+answer\");\n                    }}\n                    style={{ width: \"100%\", border: \"solid 2px \" }}\n                  >\n                    Total Posts {answers.length} Total Bounties {totalBounty} ꜩ Total Gains {collectedBounty} ꜩ\n                  </Button>\n                </div>\n                <div style={{ textAlign: \"center\", margin: 6 }}>\n                  <Button\n                    onClick={async () => {\n                      //add answer\n                      setView(\"+answer\");\n                    }}\n                    style={{ width: \"100%\", border: \"solid 2px \" }}\n                  >\n                    +\n                  </Button>\n                </div>\n              </>\n            }\n            {answers &&\n              answers.map((answer, index) => (\n                <div\n                  key={answer.timestamp}\n                  style={{ textAlign: \"center\", margin: 6 }}\n                >\n                  <div\n                    style={{\n                      width: \"100%\",\n                    }}\n                  >\n\n                    <iframe\n                      title={answer.timestamp}\n                      src={`https://open.spotify.com/embed/${answer.song.type}/${answer.song.id}?utm_source=generator`}\n                      width=\"100%\"\n                      height=\"80\"\n                      frameBorder=\"0\"\n                      allowfullscreen=\"\"\n                      allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n                    ></iframe>\n\n                    <div style={{ justifyContent: \"center\", display: \"flex\", marginBottom: 10 }}>\n\n                      {transactionWait === answer.timestamp ? <img src={loadingGif} height=\"40\"></img> : (transactionWait === answer.timestamp * -1 ? <>Domo ✅</> :\n\n                        <Button\n                          variant=\"contained\"\n                          className={classes.containedSuccess}\n                          title={\"domo\"}\n                          onClick={async () => {\n                            // sent from activeAccount.address to answer.owner amount selectedRequest.prize\n                            setTransactionWait(answer.timestamp);\n                            dAppClient.requestOperation({\n                              operationDetails: [\n                                {\n                                  kind: TezosOperationType.TRANSACTION,\n                                  destination: answer.owner, // Send to ourselves\n                                  amount: (selectedRequest.prize * 1000000).toString(), // Amount in mutez, the smallest unit in Tezos\n                                },\n                              ],\n                            }).then(response => {\n                              console.log(response);\n                              setTransactionWait(answer.timestamp * -1);\n                              setAnswer({\n                                ...answer,\n                                bounty: (answer.bounty ? answer.bounty : 0) + selectedRequest.prize\n                              }, selectedRequest.timestamp)\n\n                              setAnswers([\n                                ...answers.slice(0, index),\n                                {\n                                  ...answer,\n                                  bounty: (answer.bounty ? answer.bounty : 0) + selectedRequest.prize\n                                },\n                                ...answers.slice(index + 1)\n                              ])\n\n                            }).catch(e => {\n                              console.log(e);\n                              setTransactionWait(0);\n                            });\n\n\n                          }}\n                          style={{ width: \"20%\", border: \"solid 2px \" }}\n                        >\n                          {selectedRequest.prize} ꜩ\n                        </Button>\n\n                      )}\n                    </div>\n                    <Button\n                      title={answer.timestamp}\n                      onClick={async () => {\n                        //open answers\n                      }}\n                      style={{ width: \"100%\", border: \"solid 2px \" }}\n                    >\n                      {answer.message}\n                    </Button>\n\n                  </div>\n\n                </div>\n              ))}\n          </div>\n        </>\n      }\n\n      {view === \"+request\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginInline: 13 }}>\n            <b>Add Request</b>\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Request\"\n              variant=\"outlined\"\n              placeholder=\"recommend jazz music \"\n              fullWidth\n              onChange={handleRequestInput}\n              value={requestInput}\n            />\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Prize (ꜩ)\"\n              variant=\"outlined\"\n              placeholder=\"1\"\n              fullWidth\n              onChange={handlePrizeInput}\n              value={prizeInput}\n            />\n            <br></br>\n            <br></br>\n            <Button\n              onClick={async () => {\n                if (activeAccount && activeAccount.address) {\n                  let timestamp = Date.now();\n                  setRequest({\n                    request: requestInput,\n                    prize: parseFloat(prizeInput),\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                  })\n                  setRequests(requests\n                    .concat([\n                      {\n                        ...requests,\n                        request: requestInput,\n                        prize: parseFloat(prizeInput),\n                        owner: activeAccount.address,\n                        timestamp: timestamp,\n                      },\n                    ])\n                    .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp)));\n\n                  setSelectedRequest({\n                    request: requestInput,\n                    prize: parseFloat(prizeInput),\n                    owner: activeAccount.address,\n                    timestamp: timestamp\n                  });\n                  setView(\"answers\")\n\n                  socket.emit(\"request\", {\n                    request: requestInput,\n                    prize: parseFloat(prizeInput),\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                  });\n                }\n              }}\n              style={{ width: \"100%\", border: \"solid 2px \" }}\n            >\n              post\n            </Button>\n          </div>\n        </>\n      }\n      {view === \"+answer\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginInline: 13 }}>\n            <b>Add Answer</b>\n            <br></br>\n            <br></br>\n            {selectedRequest.request}\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Spotify Link\"\n              variant=\"outlined\"\n              placeholder=\"https://open.spotify.com/track/4cLDXR71l03pGcRdh8YESR?si=76f815e7ebda48b6\"\n              fullWidth\n              onChange={handleSongtInput}\n              value={songInput}\n            />\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Message\"\n              variant=\"outlined\"\n              placeholder=\"Listen with headphones\"\n              fullWidth\n              onChange={handleMessageInput}\n              value={messageInput}\n            />\n            <br></br>\n            <br></br>\n            <Button\n              onClick={async () => {\n                if (activeAccount && activeAccount.address) {\n                  let timestamp = Date.now();\n                  setAnswer({\n                    message: messageInput,\n                    song: song,\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                  }, selectedRequest.timestamp)\n\n                  setAnswers(answers\n                    .concat([\n                      {\n                        ...answers,\n                        message: messageInput,\n                        song: song,\n                        owner: activeAccount.address,\n                        timestamp: timestamp,\n                      },\n                    ])\n                    .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp)));\n                  setView(\"answers\")\n                }\n              }}\n              style={{ width: \"100%\", border: \"solid 2px \" }}\n            >\n              post\n            </Button>\n          </div>\n        </>\n\n      }\n\n\n\n\n    </div >\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}