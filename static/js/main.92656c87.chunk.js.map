{"version":3,"sources":["firebaseContext.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","getRequest","Promise","resolve","isSuccessful","setRequest","getRequests","setAnswer","fetchBase","FirebaseProvider","children","useCallback","timeStamp","a","fetch","method","fetchRes","ok","json","request","headers","body","JSON","stringify","message","statusText","answer","requestTimestamp","Provider","value","Tezos","TezosToolkit","wallet","BeaconWallet","name","preferblackNetwork","setWalletProvider","socketURL","window","location","hostname","socket","io","transports","dAppClient","DAppClient","versionNames","uuidv4","App","useState","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","useContext","useSnackbar","enqueueSnackbar","requests","setRequests","answers","setAnswers","version","view","setView","requestInput","setRequestInput","prizeInput","setPrizeInput","selectedRequest","setSelectedRequest","songInput","setSongInput","song","setSong","messageInput","setMessageInput","getActiveAccount","clearActiveAccount","then","sync","address","console","log","requestPermissions","permissions","useEffect","result","length","timestamp","getProfiles","onRequestChange","data","concat","sort","b","parseFloat","on","off","slice","getAcc","className","style","fontSize","display","alignItems","margin","Select","label","onChange","e","target","href","MenuItem","position","backgroundColor","Button","size","title","onClick","unsync","marginTop","marginLeft","width","marginRight","overflowX","textAlign","height","border","map","marginInline","overflowY","src","type","id","frameBorder","allowfullscreen","allow","requestOperation","operationDetails","kind","TezosOperationType","TRANSACTION","destination","owner","amount","prize","toString","response","transactionHash","TextField","variant","placeholder","fullWidth","event","Date","now","emit","split","temp","parseSong","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.92656c87.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\n\nexport interface IFirebaseContext {\n  getRequest: (key: string) => Promise<IFetchResponseBase>;\n  setRequest: (request) => Promise<IFetchResponseBase>;\n  getRequests: () => Promise<IFetchResponseBase>;\n  setAnswer: (answer, requestTimestamp) => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  getRequest: () => Promise.resolve({ isSuccessful: false }),\n  setRequest: () => Promise.resolve({ isSuccessful: false }),\n  getRequests: () => Promise.resolve({ isSuccessful: false }),\n  setAnswer: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://network4-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n  const getRequest = useCallback(\n    async (timeStamp: string): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/request/${timeStamp}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    },\n    []\n  );\n\n  const setRequest = useCallback(\n    async (request): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/request`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ request: request }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getRequests =\n    useCallback(async (): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/requests`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const setAnswer = useCallback(\n    async (answer, requestTimestamp): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/answer`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ answer: answer, requestTimestamp: requestTimestamp }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n  return (\n    <FirebaseContext.Provider\n      value={{\n        getRequest,\n        setRequest,\n        getRequests,\n        setAnswer,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","// @ts-nocheck\nimport \"./App.css\";\nimport React, { useEffect, useState, useContext } from \"react\";\n\n//ui\nimport { Button, Select, MenuItem, TextField } from \"@material-ui/core\";\n\n//logic\nimport io from \"socket.io-client\";\nimport { DAppClient, TezosOperationType } from \"@airgap/beacon-sdk\";\nimport { TezosToolkit, OpKind } from '@taquito/taquito'\nimport {\n  BeaconWallet,\n} from '@taquito/beacon-wallet'\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FirebaseContext } from \"./firebaseContext\";\nimport { useSnackbar } from \"notistack\";\n\nconst Tezos = new TezosToolkit('https://mainnet.api.tez.ie')\nconst wallet = new BeaconWallet({\n  name: 'hicetnunc.xyz',\n  preferblackNetwork: 'mainnet',\n})\nTezos.setWalletProvider(wallet)\nconst socketURL =\n  window.location.hostname === \"localhost\"\n    ? \"ws://localhost:8000\"\n    : \"wss://network4-backend.herokuapp.com\";\n\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\nconst versionNames = [\"0\", \"v1.0\", \"v2.0\", \"v3.0\", \"v4.0\"];\nconst tempID = uuidv4();\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n\n  const { getRequest, setRequest, getRequests, setAnswer } =\n    useContext(FirebaseContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [requests, setRequests] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [version] = useState(4);\n  const [view, setView] = useState(\"answers\");\n  const [requestInput, setRequestInput] = useState();\n  const [prizeInput, setPrizeInput] = useState();\n  const [selectedRequest, setSelectedRequest] = useState();\n  const [songInput, setSongInput] = useState();\n  const [song, setSong] = useState();\n  const [messageInput, setMessageInput] = useState();\n\n  useEffect(() => {\n    async function getProfiles() {\n      let result = await getRequests();\n      setRequests(result);\n      if (result.length > 0) {\n        setSelectedRequest(result[0]);\n        setAnswers(await getRequest(result[0].timestamp));\n      }\n    }\n    getProfiles();\n  }, [getRequests]);\n\n  useEffect(() => {\n    const onRequestChange = (data) => {\n      setRequests(\n        requests\n          .concat(data)\n          .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp))\n      );\n    };\n\n    socket.on(\"request\", onRequestChange);\n\n    return () => {\n      socket.off(\"request\", onRequestChange);\n    };\n  }, [requests]);\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  function parseSong(song) {\n    console.log(song.split(\"/\"));\n    let temp = song.split(\"/\");\n    setSong({ type: temp[3], id: temp[4] });\n  }\n\n  const handleRequestInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRequestInput(event.target.value.slice(0, 250));\n  };\n\n  const handlePrizeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPrizeInput(parseFloat(event.target.value));\n  };\n\n  const handleSongtInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    parseSong(event.target.value);\n    setSongInput(event.target.value);\n  };\n\n  const handleMessageInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMessageInput(event.target.value.slice(0, 250));\n  };\n\n  return (\n    <div>\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          margin: 6,\n        }}\n      >\n        <b>Network </b>\n        &nbsp;\n        <Select\n          value={version}\n          label=\"version\"\n          onChange={(e) => {\n            console.log(e.target.value);\n            let target;\n            if (e.target.value === 1) {\n              target = \"https://network1.cc/\";\n            } else if (e.target.value === 2) {\n              target = \"https://adventurepizza.github.io/Network2/\";\n            }\n            else if (e.target.value === 3) {\n              target = \"https://adventurepizza.github.io/Network3/\";\n            }\n            window.location.href = target;\n            return null;\n          }}\n        >\n          <MenuItem value={1}> {versionNames[1]}</MenuItem>\n          <MenuItem value={2}> {versionNames[2]}</MenuItem>\n          <MenuItem value={3}> {versionNames[3]}</MenuItem>\n          <MenuItem value={4}> {versionNames[4]}</MenuItem>\n        </Select>\n        &nbsp; 📠\n      </div>\n      <div\n        className=\"top-right\"\n        style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\", backgroundColor: \"white\", margin: 6 }}\n      >\n        {showUnsync && (\n          <Button\n            size={\"small\"}\n            title={\"unsync\"}\n            onClick={() => {\n              unsync();\n            }}\n          >\n            <u>unsync</u>{\" \"}\n          </Button>\n        )}\n\n        {showUnsync && <div> | </div>}\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            await sync();\n          }}\n        >\n          <u>{synced}</u>{\" \"}\n        </Button>\n      </div>\n      <div style={{ fontSize: \"0.9em\", marginTop: 13, marginLeft: 13 }}>\n        <b>Requests</b>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          overflowX: \"scroll\",\n        }}\n      >\n\n        <div style={{ textAlign: \"center\", margin: 2 }}>\n          <Button\n            onClick={async () => {\n              //add req\n              setView(\"+request\");\n            }}\n            style={{ height: \"100%\", border: \"solid 2px \" }}\n          >\n            +\n          </Button>\n        </div>\n\n\n        {requests &&\n          requests.map((request) => (\n            <div\n              key={request.timestamp}\n              style={{ textAlign: \"center\", margin: 2 }}\n            >\n              <Button\n                title={request.timestamp}\n                onClick={async () => {\n                  //open answers\n                  //console.log(await getRequest(request.timestamp))\n                  setAnswers(await getRequest(request.timestamp));\n                  setView(\"answers\");\n                  setSelectedRequest(request);\n                }}\n                style={{ width: 300, marginInline: 4, border: \"solid 2px \" }}\n              >\n                {request.request}\n              </Button>\n            </div>\n          ))}\n      </div>\n\n      {view === \"answers\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginLeft: 13, overflowY: \"auto\" }}>\n            <b>Answers</b>\n          </div>\n          <div\n            style={{\n              display: \"grid\",\n              width: \"100%\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              overflowX: \"scroll\",\n            }}\n          >\n            {selectedRequest &&\n              <div style={{ textAlign: \"center\", margin: 6 }}>\n                <Button\n                  onClick={async () => {\n                    //add answer\n                    setView(\"+answer\");\n                  }}\n                  style={{ width: \"100%\", border: \"solid 2px \" }}\n                >\n                  +\n                </Button>\n              </div>\n            }\n            {answers &&\n              answers.map((answer) => (\n                <div\n                  key={answer.timestamp}\n                  style={{ textAlign: \"center\", margin: 6 }}\n                >\n                  <div\n                    style={{\n                      width: \"100%\",\n                    }}\n                  >\n\n                    <iframe\n                      title={answer.timestamp}\n                      src={`https://open.spotify.com/embed/${answer.song.type}/${answer.song.id}?utm_source=generator`}\n                      width=\"100%\"\n                      height=\"80\"\n                      frameBorder=\"0\"\n                      allowfullscreen=\"\"\n                      allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n                    ></iframe>\n\n                    <Button\n                      title={answer.timestamp}\n                      onClick={async () => {\n                        //open answers\n                      }}\n                      style={{ width: \"80%\", border: \"solid 2px \" }}\n                    >\n                      {answer.message}\n                    </Button>\n                    <Button\n                      title={answer.timestamp}\n                      onClick={async () => {\n                        // sent from activeAccount.address to answer.owner amount selectedRequest.prize\n\n                        const response = await dAppClient.requestOperation({\n                          operationDetails: [\n                            {\n                              kind: TezosOperationType.TRANSACTION,\n                              destination: answer.owner, // Send to ourselves\n                              amount: (selectedRequest.prize * 1000000).toString(), // Amount in mutez, the smallest unit in Tezos\n                            },\n                          ],\n                        });\n\n                        console.log(\"Operation Hash: \", response.transactionHash);\n                      }}\n                      style={{ width: \"20%\", border: \"solid 2px \" }}\n                    >\n                      {selectedRequest.prize} ꜩ\n                    </Button>\n\n                  </div>\n\n                </div>\n              ))}\n          </div>\n        </>\n      }\n\n      {view === \"+request\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginInline: 13 }}>\n            <b>Add Request</b>\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Request\"\n              variant=\"outlined\"\n              placeholder=\"recommend jazz music \"\n              fullWidth\n              onChange={handleRequestInput}\n              value={requestInput}\n            />\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Prize (ꜩ)\"\n              variant=\"outlined\"\n              placeholder=\"1\"\n              fullWidth\n              onChange={handlePrizeInput}\n              value={prizeInput}\n            />\n            <br></br>\n            <br></br>\n            <Button\n              onClick={async () => {\n                if (activeAccount && activeAccount.address) {\n                  let timestamp = Date.now();\n                  setRequest({\n                    request: requestInput,\n                    prize: prizeInput,\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                  })\n                  setRequests(requests\n                    .concat([\n                      {\n                        ...requests,\n                        request: requestInput,\n                        prize: prizeInput,\n                        owner: activeAccount.address,\n                        timestamp: timestamp,\n                      },\n                    ])\n                    .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp)));\n\n                  setSelectedRequest({\n                    request: requestInput,\n                    prize: prizeInput,\n                    owner: activeAccount.address,\n                    timestamp: timestamp\n                  });\n                  setView(\"answers\")\n\n                  socket.emit(\"request\", {\n                    request: requestInput,\n                    prize: prizeInput,\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                  });\n                }\n              }}\n              style={{ width: \"100%\", border: \"solid 2px \" }}\n            >\n              post\n            </Button>\n          </div>\n        </>\n      }\n      {view === \"+answer\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginInline: 13 }}>\n            <b>Add Answer</b>\n            <br></br>\n            <br></br>\n            {selectedRequest.request}\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Spotify Link\"\n              variant=\"outlined\"\n              placeholder=\"https://open.spotify.com/track/4cLDXR71l03pGcRdh8YESR?si=76f815e7ebda48b6\"\n              fullWidth\n              onChange={handleSongtInput}\n              value={songInput}\n            />\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Message\"\n              variant=\"outlined\"\n              placeholder=\"Listen with headphones\"\n              fullWidth\n              onChange={handleMessageInput}\n              value={messageInput}\n            />\n            <br></br>\n            <br></br>\n            <Button\n              onClick={async () => {\n                if (activeAccount && activeAccount.address) {\n                  let timestamp = Date.now();\n                  setAnswer({\n                    message: messageInput,\n                    song: song,\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                  }, selectedRequest.timestamp)\n\n                  setAnswers(answers\n                    .concat([\n                      {\n                        ...answers,\n                        message: messageInput,\n                        song: song,\n                        owner: activeAccount.address,\n                        timestamp: timestamp,\n                      },\n                    ])\n                    .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp)));\n                  setView(\"answers\")\n                }\n              }}\n              style={{ width: \"100%\", border: \"solid 2px \" }}\n            >\n              post\n            </Button>\n          </div>\n        </>\n\n      }\n\n\n\n\n    </div >\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}